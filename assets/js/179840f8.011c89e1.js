"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[81586],{34409:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var r=t(85893),i=t(11151);const o={description:"Author: @wingkwong | https://leetcode.com/problems/distinct-prime-factors-of-product-of-array/"},s="2521 - Distinct Prime Factors of Product of Array (Medium)",c={id:"2500-2599/distinct-prime-factors-of-product-of-array-medium",title:"2521 - Distinct Prime Factors of Product of Array (Medium)",description:"Author: @wingkwong | https://leetcode.com/problems/distinct-prime-factors-of-product-of-array/",source:"@site/solutions/2500-2599/2521-distinct-prime-factors-of-product-of-array-medium.md",sourceDirName:"2500-2599",slug:"/2500-2599/distinct-prime-factors-of-product-of-array-medium",permalink:"/solutions/2500-2599/distinct-prime-factors-of-product-of-array-medium",draft:!1,unlisted:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2500-2599/2521-distinct-prime-factors-of-product-of-array-medium.md",tags:[],version:"current",sidebarPosition:2521,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/distinct-prime-factors-of-product-of-array/"},sidebar:"tutorialSidebar",previous:{title:"2520 - Count the Digits That Divide a Number (Easy)",permalink:"/solutions/2500-2599/count-the-digits-that-divide-a-number-easy"},next:{title:"2523 - Closest Prime Numbers in Range (Medium)",permalink:"/solutions/2500-2599/closest-prime-numbers-in-range-medium"}},a={},l=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Prime Factorization + Set",id:"approach-1-prime-factorization--set",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components},{SolutionAuthor:t,TabItem:o,Tabs:s}=n;return t||u("SolutionAuthor",!0),o||u("TabItem",!0),s||u("Tabs",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"2521---distinct-prime-factors-of-product-of-array-medium",children:"2521 - Distinct Prime Factors of Product of Array (Medium)"}),"\n",(0,r.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/distinct-prime-factors-of-product-of-array/",children:"https://leetcode.com/problems/distinct-prime-factors-of-product-of-array/"})}),"\n",(0,r.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,r.jsxs)(n.p,{children:["Given an array of positive integers ",(0,r.jsx)(n.code,{children:"nums"}),", return ",(0,r.jsxs)(n.em,{children:["the number of ",(0,r.jsx)(n.strong,{children:"distinct prime factors"})," in the product of the elements of"]})," ",(0,r.jsx)(n.code,{children:"nums"}),"."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Note"})," that:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A number greater than ",(0,r.jsx)(n.code,{children:"1"})," is called ",(0,r.jsx)(n.strong,{children:"prime"})," if it is divisible by only ",(0,r.jsx)(n.code,{children:"1"})," and itself."]}),"\n",(0,r.jsxs)(n.li,{children:["An integer ",(0,r.jsx)(n.code,{children:"val1"})," is a factor of another integer ",(0,r.jsx)(n.code,{children:"val2"})," if ",(0,r.jsx)(n.code,{children:"val2 / val1"})," is an integer."]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Input: nums = [2,4,3,7,10,6]\nOutput: 4\nExplanation:\nThe product of all the elements in nums is: 2 * 4 * 3 * 7 * 10 * 6 = 10080 = 25 * 32 * 5 * 7.\nThere are 4 distinct prime factors so we return 4.\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Input: nums = [2,4,8,16]\nOutput: 1\nExplanation:\nThe product of all the elements in nums is: 2 * 4 * 8 * 16 = 1024 = 210.\nThere is 1 distinct prime factor so we return 1.\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"1 <= nums.length <= 10^4"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"2 <= nums[i] <= 1000"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"approach-1-prime-factorization--set",children:"Approach 1: Prime Factorization + Set"}),"\n",(0,r.jsx)(n.p,{children:"For each number, we can prime-factorize it and insert it to a Set. The answer would be the number of the size of set."}),"\n",(0,r.jsx)(s,{children:(0,r.jsxs)(o,{value:"cpp",label:"C++",children:[(0,r.jsx)(t,{name:"@wingkwong"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    vector<pair<long long, int>> prime_factorize(long long n) {\n        assert(n >= 1);\n        vector<pair<long long, int>> result;\n\n        auto extract = [&](long long p) {\n            if (n % p == 0) {\n                result.emplace_back(p, 0);\n\n                do {\n                    n /= p;\n                    result.back().second++;\n                } while (n % p == 0);\n            }\n        };\n\n        for (long long p = 2; p * p <= n; p += p % 2 + 1)\n            extract(p);\n\n        if (n > 1)\n            result.emplace_back(n, 1);\n\n        return result;\n    }\n\n    int distinctPrimeFactors(vector<int>& nums) {\n        set<int> s;\n        for (auto x : nums) {\n            for (auto x : prime_factorize(x)) {\n                s.insert(x.first);\n            }\n        }\n        return s.size();\n    }\n};\n"})})]})})]})}function p(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function u(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>s});var r=t(67294);const i={},o=r.createContext(i);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);