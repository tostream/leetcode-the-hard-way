"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[41298],{84655:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var i=t(85893),r=t(11151);const s={description:"Author: @wingkwong | https://leetcode.com/problems/check-if-n-and-its-double-exist/"},o="1346 - Check If N and Its Double Exist (Easy)",c={id:"1300-1399/check-if-n-and-its-double-exist-easy",title:"1346 - Check If N and Its Double Exist (Easy)",description:"Author: @wingkwong | https://leetcode.com/problems/check-if-n-and-its-double-exist/",source:"@site/solutions/1300-1399/1346-check-if-n-and-its-double-exist-easy.md",sourceDirName:"1300-1399",slug:"/1300-1399/check-if-n-and-its-double-exist-easy",permalink:"/solutions/1300-1399/check-if-n-and-its-double-exist-easy",draft:!1,unlisted:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/1300-1399/1346-check-if-n-and-its-double-exist-easy.md",tags:[],version:"current",sidebarPosition:1346,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/check-if-n-and-its-double-exist/"},sidebar:"tutorialSidebar",previous:{title:"1337 - The K Weakest Rows in a Matrix (Easy)",permalink:"/solutions/1300-1399/the-k-weakest-rows-in-a-matrix-easy"},next:{title:"1347 - Minimum Number of Steps to Make Two Strings Anagram (Easy)",permalink:"/solutions/1300-1399/minimum-number-of-steps-to-make-two-strings-anagram-medium"}},a={},l=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Binary Search",id:"approach-1-binary-search",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.a)(),...e.components},{SolutionAuthor:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("SolutionAuthor",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"1346---check-if-n-and-its-double-exist-easy",children:"1346 - Check If N and Its Double Exist (Easy)"}),"\n",(0,i.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/check-if-n-and-its-double-exist/",children:"https://leetcode.com/problems/check-if-n-and-its-double-exist/"})}),"\n",(0,i.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,i.jsxs)(n.p,{children:["Given an array ",(0,i.jsx)(n.code,{children:"arr"})," of integers, check if there exists two integers ",(0,i.jsx)(n.code,{children:"N"})," and ",(0,i.jsx)(n.code,{children:"M"})," such that ",(0,i.jsx)(n.code,{children:"N"})," is the double of ",(0,i.jsx)(n.code,{children:"M"})," ( i.e. ",(0,i.jsx)(n.code,{children:"N = 2 * M"}),")."]}),"\n",(0,i.jsxs)(n.p,{children:["More formally check if there exists two indices ",(0,i.jsx)(n.code,{children:"i"})," and ",(0,i.jsx)(n.code,{children:"j"})," such that :"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"i != j"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"0 <= i, j < arr.length"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"arr[i] == 2 * arr[j]"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Input: arr = [10,2,5,3]\nOutput: true\nExplanation: N = 10 is the double of M = 5,that is, 10 = 2 * 5.\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Input: arr = [7,1,14,11]\nOutput: true\nExplanation: N = 14 is the double of M = 7,that is, 14 = 2 * 7.\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Example 3:"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Input: arr = [3,1,7,11]\nOutput: false\nExplanation: In this case does not exist N and M, such that N = 2 * M.\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"2 <= arr.length <= 500"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"-10^3 <= arr[i] <= 10^3"})}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"approach-1-binary-search",children:"Approach 1: Binary Search"}),"\n",(0,i.jsx)(n.admonition,{title:"Prerequisite",type:"info",children:(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"../../tutorials/basic-topics/binary-search",children:"Binary Search"})}),"\n"]})}),"\n",(0,i.jsxs)(n.p,{children:["First we sort the input, and we iterate each element and look for its double using binary search. For the binary search function, we can use the same solution as ",(0,i.jsx)(n.a,{href:"../0700-0799/binary-search-easy",children:"0704 - Binary Search (Easy)"}),"."]}),"\n",(0,i.jsx)(t,{name:"@wingkwong"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    // 0704 - Binary Search (Easy)\n    int search(vector<int>& nums, int target) {\n        // init possible boundary\n        int n = nums.size(), l = 0, r = n - 1;\n        while (l < r) {\n            // get the middle one\n            // for even number of elements, take the lower one\n            int m = l + (r - l) / 2;\n            // exclude m\n            if (target > nums[m]) l = m + 1;\n            // include m\n            else r = m;\n        }\n        return nums[l] == target ? l : -1;\n    }\n    \n    bool checkIfExist(vector<int>& arr) {\n        sort(arr.begin(), arr.end());\n        for (int i = 0; i < arr.size(); i++) {\n            int res = search(arr, arr[i] * 2);\n            if (res != -1 && res != i) {\n                return true;\n            }\n        }\n        return false;\n    }\n};\n"})})]})}function h(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>c,a:()=>o});var i=t(67294);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);