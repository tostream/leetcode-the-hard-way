"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[12791],{36940:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>c,frontMatter:()=>o,metadata:()=>a,toc:()=>m});var r=t(85893),i=t(11151);const o={description:"Author: @wingkwong | https://leetcode.com/problems/sum-in-a-matrix/"},s="2679 - Sum in a Matrix (Medium)",a={id:"2600-2699/sum-in-a-matrix-medium",title:"2679 - Sum in a Matrix (Medium)",description:"Author: @wingkwong | https://leetcode.com/problems/sum-in-a-matrix/",source:"@site/solutions/2600-2699/2679-sum-in-a-matrix-medium.md",sourceDirName:"2600-2699",slug:"/2600-2699/sum-in-a-matrix-medium",permalink:"/solutions/2600-2699/sum-in-a-matrix-medium",draft:!1,unlisted:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2600-2699/2679-sum-in-a-matrix-medium.md",tags:[],version:"current",sidebarPosition:2679,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/sum-in-a-matrix/"},sidebar:"tutorialSidebar",previous:{title:"2678 - Number of Senior Citizens (Easy)",permalink:"/solutions/2600-2699/number-of-senior-citizens-easy"},next:{title:"2680 - Maximum OR (Medium)",permalink:"/solutions/2600-2699/maximum-or-medium"}},l={},m=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Sort and Count",id:"approach-1-sort-and-count",level:2}];function d(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components},{SolutionAuthor:t,TabItem:o,Tabs:s}=n;return t||u("SolutionAuthor",!0),o||u("TabItem",!0),s||u("Tabs",!0),(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h1,{id:"2679---sum-in-a-matrix-medium",children:"2679 - Sum in a Matrix (Medium)"}),"\n",(0,r.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{href:"https://leetcode.com/problems/sum-in-a-matrix/",children:"https://leetcode.com/problems/sum-in-a-matrix/"})}),"\n",(0,r.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,r.jsxs)(n.p,{children:["You are given a ",(0,r.jsx)(n.strong,{children:"0-indexed"})," 2D integer array ",(0,r.jsx)(n.code,{children:"nums"}),". Initially, your score is ",(0,r.jsx)(n.code,{children:"0"}),". Perform the following operations until the matrix becomes empty:"]}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"From each row in the matrix, select the largest number and remove it. In the case of a tie, it does not matter which number is chosen."}),"\n",(0,r.jsxs)(n.li,{children:["Identify the highest number amongst all those removed in step 1. Add that number to your ",(0,r.jsx)(n.strong,{children:"score"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["Return ",(0,r.jsxs)(n.em,{children:["the final ",(0,r.jsx)(n.strong,{children:"score"}),"."]})]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Input: nums = [[7,2,1],[6,4,2],[6,5,3],[3,2,1]]\nOutput: 15\nExplanation: In the first operation, we remove 7, 6, 6, and 3. We then add 7 to our score. Next, we remove 2, 4, 5, and 2. We add 5 to our score. Lastly, we remove 1, 2, 3, and 1. We add 3 to our score. Thus, our final score is 7 + 5 + 3 = 15.\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"Input: nums = [[1]]\nOutput: 1\nExplanation: We remove 1 and add it to the answer. We return 1.\n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"1 <= nums.length <= 300"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"1 <= nums[i].length <= 500"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"0 <= nums[i][j] <= 103"})}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"approach-1-sort-and-count",children:"Approach 1: Sort and Count"}),"\n",(0,r.jsx)(s,{children:(0,r.jsxs)(o,{value:"py",label:"Python",children:[(0,r.jsx)(t,{name:"@wingkwong"}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:"class Solution:\n    def matrixSum(self, nums: List[List[int]]) -> int:\n        m, n = len(nums), len(nums[0])\n        res = 0\n        # sort each row\n        for num in nums: num.sort()\n        # for each column, \n        for j in range(n):\n            # we look for the highest number\n            mx = 0\n            for i in range(m): mx = max(mx, nums[i][j])\n            # then add that number to the score\n            res += mx\n        return res\n"})}),(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-py",children:"class Solution:\n    def matrixSum(self, nums: List[List[int]]) -> int:\n        res = 0\n        # we first sort the rows, then transpose the input\n        # in this way, we can just use max to find the higher number\n        for col in zip(*[sorted(row) for row in nums]):\n            # [\n            #     (1, 2, 3, 1), \n            #     (2, 4, 5, 2), \n            #     (7, 6, 6, 3)\n            # ]\n            res += max(col)\n        return res\n"})})]})})]})}function c(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}function u(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},11151:(e,n,t)=>{t.d(n,{Z:()=>a,a:()=>s});var r=t(67294);const i={},o=r.createContext(i);function s(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);