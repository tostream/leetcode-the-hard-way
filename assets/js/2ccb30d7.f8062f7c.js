"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[90573],{64785:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var s=t(85893),r=t(11151);const a={description:"Author: @wingkwong | https://leetcode.com/problems/make-array-zero-by-subtracting-equal-amounts"},o="2357 - Make Array Zero by Subtracting Equal Amounts (Easy)",i={id:"2300-2399/make-array-zero-by-subtracting-equal-amounts-easy",title:"2357 - Make Array Zero by Subtracting Equal Amounts (Easy)",description:"Author: @wingkwong | https://leetcode.com/problems/make-array-zero-by-subtracting-equal-amounts",source:"@site/solutions/2300-2399/2357-make-array-zero-by-subtracting-equal-amounts-easy.md",sourceDirName:"2300-2399",slug:"/2300-2399/make-array-zero-by-subtracting-equal-amounts-easy",permalink:"/solutions/2300-2399/make-array-zero-by-subtracting-equal-amounts-easy",draft:!1,unlisted:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2300-2399/2357-make-array-zero-by-subtracting-equal-amounts-easy.md",tags:[],version:"current",sidebarPosition:2357,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/make-array-zero-by-subtracting-equal-amounts"},sidebar:"tutorialSidebar",previous:{title:"2354 - Number of Excellent Pairs (Hard)",permalink:"/solutions/2300-2399/number-of-excellent-pairs-hard"},next:{title:"2358 - Maximum Number of Groups Entering a Competition (Medium)",permalink:"/solutions/2300-2399/maximum-number-of-groups-entering-a-competition-medium"}},l={},c=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach: Counting",id:"approach-counting",level:2}];function m(e){const n={a:"a",annotation:"annotation",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",math:"math",mi:"mi",mrow:"mrow",p:"p",pre:"pre",semantics:"semantics",span:"span",strong:"strong",ul:"ul",...(0,r.a)(),...e.components},{SolutionAuthor:t}=n;return t||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("SolutionAuthor",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"2357---make-array-zero-by-subtracting-equal-amounts-easy",children:"2357 - Make Array Zero by Subtracting Equal Amounts (Easy)"}),"\n",(0,s.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://leetcode.com/problems/make-array-zero-by-subtracting-equal-amounts",children:"https://leetcode.com/problems/make-array-zero-by-subtracting-equal-amounts"})}),"\n",(0,s.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,s.jsxs)(n.p,{children:["You are given a non-negative integer array ",(0,s.jsx)(n.code,{children:"nums"}),". In one operation, you must:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Choose a positive integer ",(0,s.jsx)(n.code,{children:"x"})," such that ",(0,s.jsx)(n.code,{children:"x"})," is less than or equal to the ",(0,s.jsx)(n.strong,{children:"smallest non-zero"})," element in ",(0,s.jsx)(n.code,{children:"nums"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["Subtract ",(0,s.jsx)(n.code,{children:"x"})," from every ",(0,s.jsx)(n.strong,{children:"positive"})," element in ",(0,s.jsx)(n.code,{children:"nums"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Return ",(0,s.jsxs)(n.em,{children:["the ",(0,s.jsx)(n.strong,{children:"minimum"})," number of operations to make every element in"]})," ",(0,s.jsx)(n.code,{children:"nums"})," ",(0,s.jsx)(n.em,{children:"equal to"})," ",(0,s.jsx)(n.code,{children:"0"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Input: nums = [1,5,0,3,5]\nOutput: 3\nExplanation:\nIn the first operation, choose x = 1. Now, nums = [0,4,0,2,4].\nIn the second operation, choose x = 2. Now, nums = [0,2,0,0,2].\nIn the third operation, choose x = 2. Now, nums = [0,0,0,0,0].\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"Input: nums = [0]\nOutput: 0\nExplanation: Each element in nums is already 0 so no operations are needed.\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"1 <= nums.length <= 100"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"0 <= nums[i] <= 100"})}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"approach-counting",children:"Approach: Counting"}),"\n",(0,s.jsx)(n.p,{children:"Observations:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["We can remove all numbers ",(0,s.jsx)(n.code,{children:"x"})," in one go"]}),"\n",(0,s.jsxs)(n.li,{children:["We need ",(0,s.jsxs)(n.span,{className:"katex",children:[(0,s.jsx)(n.span,{className:"katex-mathml",children:(0,s.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(n.semantics,{children:[(0,s.jsx)(n.mrow,{children:(0,s.jsx)(n.mi,{children:"n"})}),(0,s.jsx)(n.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,s.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,s.jsxs)(n.span,{className:"base",children:[(0,s.jsx)(n.span,{className:"strut",style:{height:"0.4306em"}}),(0,s.jsx)(n.span,{className:"mord mathnormal",children:"n"})]})})]})," moves to remove ",(0,s.jsxs)(n.span,{className:"katex",children:[(0,s.jsx)(n.span,{className:"katex-mathml",children:(0,s.jsx)(n.math,{xmlns:"http://www.w3.org/1998/Math/MathML",children:(0,s.jsxs)(n.semantics,{children:[(0,s.jsx)(n.mrow,{children:(0,s.jsx)(n.mi,{children:"n"})}),(0,s.jsx)(n.annotation,{encoding:"application/x-tex",children:"n"})]})})}),(0,s.jsx)(n.span,{className:"katex-html","aria-hidden":"true",children:(0,s.jsxs)(n.span,{className:"base",children:[(0,s.jsx)(n.span,{className:"strut",style:{height:"0.4306em"}}),(0,s.jsx)(n.span,{className:"mord mathnormal",children:"n"})]})})]})," distinct numbers"]}),"\n",(0,s.jsx)(n.li,{children:"Hence, the problem is to find out the number of different positive numbers"}),"\n"]}),"\n",(0,s.jsx)(t,{name:"@wingkwong"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-go",children:"func minimumOperations(nums []int) int {\n    s := make(map[int]bool)\n    for _, v := range nums {\n        if v > 0 { \n            s[v] = true\n        }\n    }\n    return len(s)\n}\n"})})]})}function u(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}},11151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>o});var s=t(67294);const r={},a=s.createContext(r);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);