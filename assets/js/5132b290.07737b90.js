"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[72405],{13313:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var t=r(85893),i=r(11151);const o={description:"Author: @wingkwong | https://leetcode.com/problems/single-element-in-a-sorted-array/",tags:["Array","Binary Search"]},s="0540 - Single Element in a Sorted Array (Medium)",a={id:"0500-0599/single-element-in-a-sorted-array-medium",title:"0540 - Single Element in a Sorted Array (Medium)",description:"Author: @wingkwong | https://leetcode.com/problems/single-element-in-a-sorted-array/",source:"@site/solutions/0500-0599/0540-single-element-in-a-sorted-array-medium.md",sourceDirName:"0500-0599",slug:"/0500-0599/single-element-in-a-sorted-array-medium",permalink:"/solutions/0500-0599/single-element-in-a-sorted-array-medium",draft:!1,unlisted:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/0500-0599/0540-single-element-in-a-sorted-array-medium.md",tags:[{label:"Array",permalink:"/solutions/tags/array"},{label:"Binary Search",permalink:"/solutions/tags/binary-search"}],version:"current",sidebarPosition:540,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/single-element-in-a-sorted-array/",tags:["Array","Binary Search"]},sidebar:"tutorialSidebar",previous:{title:"0532 - K-diff Pairs in an Array (Medium)",permalink:"/solutions/0500-0599/k-diff-pairs-in-an-array-medium"},next:{title:"0543 - Diameter of Binary Tree (Easy)",permalink:"/solutions/0500-0599/diameter-of-binary-tree-easy"}},l={},c=[{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Binary Search",id:"approach-1-binary-search",level:2}];function d(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components},{SolutionAuthor:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("SolutionAuthor",!0),(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"0540---single-element-in-a-sorted-array-medium",children:"0540 - Single Element in a Sorted Array (Medium)"}),"\n",(0,t.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,t.jsx)(n.p,{children:"You are given a sorted array consisting of only integers where every element appears exactly twice, except for one element which appears exactly once."}),"\n",(0,t.jsxs)(n.p,{children:["Return ",(0,t.jsx)(n.em,{children:"the single element that appears only once"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Your solution must run in ",(0,t.jsx)(n.code,{children:"O(log n)"})," time and ",(0,t.jsx)(n.code,{children:"O(1)"})," space."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example 1:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: nums = [1,1,2,3,3,4,4,8,8]\nOutput: 2\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Example 2:"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Input: nums = [3,3,7,7,10,11,11]\nOutput: 10\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Constraints:"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"1 <= nums.length <= 105"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.code,{children:"0 <= nums[i] <= 105"})}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"approach-1-binary-search",children:"Approach 1: Binary Search"}),"\n",(0,t.jsx)(r,{name:"@wingkwong"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    int singleNonDuplicate(vector<int>& nums) {\n        // init possible boundary\n        int n = nums.size(), l = 0, r = n - 1;\n        while (l < r) {\n            // get the middle one\n            // for even number of elements, take the lower one\n            int m = l + (r - l) / 2;\n            // handle case like [3,3,7,7,10,11,11]\n             m -= m & 1;\n            // exclude m\n            if (nums[m] == nums[m + 1]) l = m + 2;\n            // include m\n            else r = m;\n        }\n        return nums[l];\n    }\n};\n"})})]})}function m(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>a,a:()=>s});var t=r(67294);const i={},o=t.createContext(i);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);