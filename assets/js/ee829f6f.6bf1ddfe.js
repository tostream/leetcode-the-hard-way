"use strict";(self.webpackChunkleetcode_the_hard_way=self.webpackChunkleetcode_the_hard_way||[]).push([[47911],{71003:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>u,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var i=r(85893),t=r(11151);const o={description:"Author: @wingkwong | https://leetcode.com/problems/divide-array-into-equal-pairs/"},s="2206 - Divide Array Into Equal Pairs (Easy)",a={id:"2100-2199/divide-array-into-equal-pairs-easy",title:"2206 - Divide Array Into Equal Pairs (Easy)",description:"Author: @wingkwong | https://leetcode.com/problems/divide-array-into-equal-pairs/",source:"@site/solutions/2100-2199/2206-divide-array-into-equal-pairs-easy.md",sourceDirName:"2100-2199",slug:"/2100-2199/divide-array-into-equal-pairs-easy",permalink:"/solutions/2100-2199/divide-array-into-equal-pairs-easy",draft:!1,unlisted:!1,editUrl:"https://github.com/wingkwong/leetcode-the-hard-way/tree/main/solutions/2100-2199/2206-divide-array-into-equal-pairs-easy.md",tags:[],version:"current",sidebarPosition:2206,frontMatter:{description:"Author: @wingkwong | https://leetcode.com/problems/divide-array-into-equal-pairs/"},sidebar:"tutorialSidebar",previous:{title:"2203 - Minimum Weighted Subgraph With the Required Paths (Hard)",permalink:"/solutions/2100-2199/minimum-weighted-subgraph-with-the-required-paths-hard"},next:{title:"2207 - Maximize Number of Subsequences in a String (Medium)",permalink:"/solutions/2100-2199/maximize-number-of-subsequences-in-a-string-medium"}},d={},l=[{value:"Problem Link",id:"problem-link",level:2},{value:"Problem Statement",id:"problem-statement",level:2},{value:"Approach 1: Brute Force",id:"approach-1-brute-force",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components},{SolutionAuthor:r}=n;return r||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("SolutionAuthor",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"2206---divide-array-into-equal-pairs-easy",children:"2206 - Divide Array Into Equal Pairs (Easy)"}),"\n",(0,i.jsx)(n.h2,{id:"problem-link",children:"Problem Link"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://leetcode.com/problems/divide-array-into-equal-pairs/",children:"https://leetcode.com/problems/divide-array-into-equal-pairs/"})}),"\n",(0,i.jsx)(n.h2,{id:"problem-statement",children:"Problem Statement"}),"\n",(0,i.jsxs)(n.p,{children:["You are given an integer array ",(0,i.jsx)(n.code,{children:"nums"})," consisting of ",(0,i.jsx)(n.code,{children:"2 * n"})," integers."]}),"\n",(0,i.jsxs)(n.p,{children:["You need to divide ",(0,i.jsx)(n.code,{children:"nums"})," into ",(0,i.jsx)(n.code,{children:"n"})," pairs such that:"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Each element belongs to ",(0,i.jsx)(n.strong,{children:"exactly one"})," pair."]}),"\n",(0,i.jsxs)(n.li,{children:["The elements present in a pair are ",(0,i.jsx)(n.strong,{children:"equal"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Return ",(0,i.jsx)(n.code,{children:"true"})," ",(0,i.jsx)(n.em,{children:"if nums can be divided into"})," ",(0,i.jsx)(n.code,{children:"n"})," ",(0,i.jsx)(n.em,{children:"pairs, otherwise return"})," ",(0,i.jsx)(n.code,{children:"false"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"approach-1-brute-force",children:"Approach 1: Brute Force"}),"\n",(0,i.jsx)(n.p,{children:"Count the frequency for each number. If there is a number with odd frequency, then the answer is false. Otherwise, it must be true."}),"\n",(0,i.jsx)(r,{name:"@wingkwong"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-cpp",children:"class Solution {\npublic:\n    bool divideArray(vector<int>& nums) {\n        int n = nums.size(), cnt = 0;\n        unordered_map<int, int> m;\n        // count the frequency for each number\n        for (auto x : nums) m[x]++;\n        for (auto x : m) {\n            // check if it is odd\n            if (x.second & 1) {\n                return false;\n            }\n        }\n        return true;\n    }\n};\n"})})]})}function u(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},11151:(e,n,r)=>{r.d(n,{Z:()=>a,a:()=>s});var i=r(67294);const t={},o=i.createContext(t);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);